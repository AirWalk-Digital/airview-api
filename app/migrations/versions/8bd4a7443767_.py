"""empty message

Revision ID: 8bd4a7443767
Revises: 977a9158535e
Create Date: 2023-06-26 16:32:48.000948

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8bd4a7443767'
down_revision = '977a9158535e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('framework',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('link', sa.String(length=500), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('reference', sa.String(length=500), nullable=False),
    sa.Column('type', sa.Enum('UNKNOWN', 'VIRTUAL_MACHINE', 'CONTAINER', 'NETWORK', 'REPOSITORY', 'PIPELINE', 'OBJECT_STORAGE', 'DATABASE', 'FUNCTION', 'STORAGE', name='servicetype'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference', name='uq_service')
    )
    op.create_table('application_environment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('environment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ),
    sa.ForeignKeyConstraint(['environment_id'], ['environment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('control',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('quality_model', sa.Enum('LOG_EXCELLENCE', 'SECURITY', 'RELIABILITY', 'PERFORMANCE_EFFICIENCY', 'COST_OPTIMISATION', 'PORTABILITY', 'USABILITY_AND_COMPATIBILITY', name='qualitymodel'), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.Column('severity', sa.Enum('CRITICAL', 'HIGH', 'MEDIUM', 'LOW', name='controlseverity'), nullable=False),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('framework_section',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('link', sa.String(length=500), nullable=False),
    sa.Column('framework_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['framework_id'], ['framework.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('application_environment_reference',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('application_environment_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=500), nullable=False),
    sa.Column('reference', sa.String(length=500), nullable=False),
    sa.ForeignKeyConstraint(['application_environment_id'], ['application_environment.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('application_environment_id', 'type', name='uq_application_environment_type'),
    sa.UniqueConstraint('type', 'reference', name='uq_application_enviroinment_reference')
    )
    op.create_table('framework_control_objective',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('link', sa.String(length=500), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('framework_section_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['framework_section_id'], ['framework_section.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resource',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('reference', sa.String(length=500), nullable=False),
    sa.Column('last_modified', sa.DateTime(), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.Column('application_environment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['application_environment_id'], ['application_environment.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference', 'application_environment_id', name='uq_resource')
    )
    op.create_table('exclusion_resource',
    sa.Column('resource_id', sa.Integer(), nullable=False),
    sa.Column('exclusion_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exclusion_id'], ['exclusion.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['resource.id'], ),
    sa.PrimaryKeyConstraint('resource_id', 'exclusion_id')
    )
    op.create_table('framework_control_objective_link',
    sa.Column('framework_control_objective_id', sa.Integer(), nullable=False),
    sa.Column('control_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['control_id'], ['control.id'], ),
    sa.ForeignKeyConstraint(['framework_control_objective_id'], ['framework_control_objective.id'], ),
    sa.PrimaryKeyConstraint('framework_control_objective_id', 'control_id')
    )
    op.drop_table('application_technical_control')
    op.drop_table('application_reference')
    op.drop_table('monitored_resource_ticket')
    op.drop_constraint(None, 'application', type_='foreignkey')
    op.drop_constraint(None, 'application', type_='foreignkey')
    op.drop_column('application', 'environment_id')
    op.drop_column('application', 'parent_id')
    op.add_column('exclusion', sa.Column('status', sa.Enum('NONE', 'PENDING', 'ACTIVE', name='exclusionstate'), nullable=True))
    op.add_column('exclusion', sa.Column('control_id', sa.Integer(), nullable=False))
    op.add_column('exclusion', sa.Column('application_environment_id', sa.Integer(), nullable=False))
    op.drop_constraint(None, 'exclusion', type_='foreignkey')
    op.create_foreign_key(None, 'exclusion', 'application_environment', ['application_environment_id'], ['id'])
    op.create_foreign_key(None, 'exclusion', 'control', ['control_id'], ['id'])
    op.drop_column('exclusion', 'mitigation')
    op.drop_column('exclusion', 'impact')
    op.drop_column('exclusion', 'application_technical_control_id')
    op.drop_column('exclusion', 'probability')
    op.add_column('monitored_resource', sa.Column('resource_id', sa.Integer(), nullable=False))
    op.add_column('monitored_resource', sa.Column('technical_control_id', sa.Integer(), nullable=False))
    op.drop_constraint('uq_monitored_resource', 'monitored_resource', type_='unique')
    op.drop_constraint(None, 'monitored_resource', type_='foreignkey')
    op.drop_constraint(None, 'monitored_resource', type_='foreignkey')
    op.create_foreign_key(None, 'monitored_resource', 'resource', ['resource_id'], ['id'])
    op.create_foreign_key(None, 'monitored_resource', 'technical_control', ['technical_control_id'], ['id'])
    op.drop_column('monitored_resource', 'exclusion_id')
    op.drop_column('monitored_resource', 'reference')
    op.drop_column('monitored_resource', 'exclusion_state')
    op.drop_column('monitored_resource', 'application_technical_control_id')
    op.drop_column('monitored_resource', 'type')
    op.add_column('technical_control', sa.Column('control_id', sa.Integer(), nullable=True))
    op.drop_constraint(None, 'technical_control', type_='foreignkey')
    op.create_foreign_key(None, 'technical_control', 'control', ['control_id'], ['id'])
    op.drop_column('technical_control', 'can_delete_resources')
    op.drop_column('technical_control', 'parent_id')
    op.drop_column('technical_control', 'severity')
    op.drop_column('technical_control', 'quality_model')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('technical_control', sa.Column('quality_model', sa.VARCHAR(length=27), nullable=False))
    op.add_column('technical_control', sa.Column('severity', sa.VARCHAR(length=6), nullable=False))
    op.add_column('technical_control', sa.Column('parent_id', sa.INTEGER(), nullable=True))
    op.add_column('technical_control', sa.Column('can_delete_resources', sa.BOOLEAN(), nullable=False))
    op.drop_constraint(None, 'technical_control', type_='foreignkey')
    op.create_foreign_key(None, 'technical_control', 'technical_control', ['parent_id'], ['id'])
    op.drop_column('technical_control', 'control_id')
    op.add_column('monitored_resource', sa.Column('type', sa.VARCHAR(length=15), nullable=False))
    op.add_column('monitored_resource', sa.Column('application_technical_control_id', sa.INTEGER(), nullable=False))
    op.add_column('monitored_resource', sa.Column('exclusion_state', sa.VARCHAR(length=7), nullable=True))
    op.add_column('monitored_resource', sa.Column('reference', sa.VARCHAR(length=500), nullable=False))
    op.add_column('monitored_resource', sa.Column('exclusion_id', sa.INTEGER(), nullable=True))
    op.drop_constraint(None, 'monitored_resource', type_='foreignkey')
    op.drop_constraint(None, 'monitored_resource', type_='foreignkey')
    op.create_foreign_key(None, 'monitored_resource', 'application_technical_control', ['application_technical_control_id'], ['id'])
    op.create_foreign_key(None, 'monitored_resource', 'exclusion', ['exclusion_id'], ['id'])
    op.create_unique_constraint('uq_monitored_resource', 'monitored_resource', ['application_technical_control_id', 'reference'])
    op.drop_column('monitored_resource', 'technical_control_id')
    op.drop_column('monitored_resource', 'resource_id')
    op.add_column('exclusion', sa.Column('probability', sa.INTEGER(), nullable=False))
    op.add_column('exclusion', sa.Column('application_technical_control_id', sa.INTEGER(), nullable=False))
    op.add_column('exclusion', sa.Column('impact', sa.INTEGER(), nullable=False))
    op.add_column('exclusion', sa.Column('mitigation', sa.VARCHAR(), nullable=False))
    op.drop_constraint(None, 'exclusion', type_='foreignkey')
    op.drop_constraint(None, 'exclusion', type_='foreignkey')
    op.create_foreign_key(None, 'exclusion', 'application_technical_control', ['application_technical_control_id'], ['id'])
    op.drop_column('exclusion', 'application_environment_id')
    op.drop_column('exclusion', 'control_id')
    op.drop_column('exclusion', 'status')
    op.add_column('application', sa.Column('parent_id', sa.INTEGER(), nullable=True))
    op.add_column('application', sa.Column('environment_id', sa.INTEGER(), nullable=True))
    op.create_foreign_key(None, 'application', 'application', ['parent_id'], ['id'])
    op.create_foreign_key(None, 'application', 'environment', ['environment_id'], ['id'])
    op.create_table('monitored_resource_ticket',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('monitored_resource_id', sa.INTEGER(), nullable=False),
    sa.Column('reference', sa.VARCHAR(length=50), nullable=True),
    sa.Column('request_timestamp', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['monitored_resource_id'], ['monitored_resource.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('application_reference',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('application_id', sa.INTEGER(), nullable=False),
    sa.Column('type', sa.VARCHAR(length=500), nullable=False),
    sa.Column('reference', sa.VARCHAR(length=500), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('application_id', 'type', name='uq_application_type'),
    sa.UniqueConstraint('type', 'reference', name='uq_application_reference')
    )
    op.create_table('application_technical_control',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('application_id', sa.INTEGER(), nullable=False),
    sa.Column('technical_control_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ),
    sa.ForeignKeyConstraint(['technical_control_id'], ['technical_control.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('application_id', 'technical_control_id', name='uq_application_technical_control')
    )
    op.drop_table('framework_control_objective_link')
    op.drop_table('exclusion_resource')
    op.drop_table('resource')
    op.drop_table('framework_control_objective')
    op.drop_table('application_environment_reference')
    op.drop_table('framework_section')
    op.drop_table('control')
    op.drop_table('application_environment')
    op.drop_table('service')
    op.drop_table('framework')
    # ### end Alembic commands ###
